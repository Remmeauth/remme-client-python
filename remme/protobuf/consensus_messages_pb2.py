# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: consensus_messages.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='consensus_messages.proto',
  package='',
  syntax='proto3',
  serialized_pb=_b('\n\x18\x63onsensus_messages.proto\"P\n\x17\x43onsensusMessagePayload\x12\x0e\n\x06period\x18\x01 \x01(\x04\x12\x13\n\x0bproposal_id\x18\x02 \x01(\t\x12\x10\n\x08voter_id\x18\x03 \x01(\t\"\xb8\x01\n\x16\x43onsensusMessageHeader\x12*\n\x04type\x18\x01 \x01(\x0e\x32\x1c.ConsensusMessageHeader.Type\x12)\n\x07payload\x18\x02 \x01(\x0b\x32\x18.ConsensusMessagePayload\"G\n\x04Type\x12\x12\n\x0eVALUE_PROPOSAL\x10\x00\x12\r\n\tSOFT_VOTE\x10\x01\x12\r\n\tCERT_VOTE\x10\x02\x12\r\n\tNEXT_VOTE\x10\x03\"U\n\x10\x43onsensusMessage\x12\'\n\x06header\x18\x01 \x01(\x0b\x32\x17.ConsensusMessageHeader\x12\x18\n\x10header_signature\x18\x02 \x01(\x0c\"?\n\rConsensusSeal\x12.\n\x13previous_cert_votes\x18\x02 \x03(\x0b\x32\x11.ConsensusMessageb\x06proto3')
)



_CONSENSUSMESSAGEHEADER_TYPE = _descriptor.EnumDescriptor(
  name='Type',
  full_name='ConsensusMessageHeader.Type',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='VALUE_PROPOSAL', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SOFT_VOTE', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CERT_VOTE', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NEXT_VOTE', index=3, number=3,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=224,
  serialized_end=295,
)
_sym_db.RegisterEnumDescriptor(_CONSENSUSMESSAGEHEADER_TYPE)


_CONSENSUSMESSAGEPAYLOAD = _descriptor.Descriptor(
  name='ConsensusMessagePayload',
  full_name='ConsensusMessagePayload',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='period', full_name='ConsensusMessagePayload.period', index=0,
      number=1, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='proposal_id', full_name='ConsensusMessagePayload.proposal_id', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='voter_id', full_name='ConsensusMessagePayload.voter_id', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=28,
  serialized_end=108,
)


_CONSENSUSMESSAGEHEADER = _descriptor.Descriptor(
  name='ConsensusMessageHeader',
  full_name='ConsensusMessageHeader',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='type', full_name='ConsensusMessageHeader.type', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='payload', full_name='ConsensusMessageHeader.payload', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _CONSENSUSMESSAGEHEADER_TYPE,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=111,
  serialized_end=295,
)


_CONSENSUSMESSAGE = _descriptor.Descriptor(
  name='ConsensusMessage',
  full_name='ConsensusMessage',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='header', full_name='ConsensusMessage.header', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='header_signature', full_name='ConsensusMessage.header_signature', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=297,
  serialized_end=382,
)


_CONSENSUSSEAL = _descriptor.Descriptor(
  name='ConsensusSeal',
  full_name='ConsensusSeal',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='previous_cert_votes', full_name='ConsensusSeal.previous_cert_votes', index=0,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=384,
  serialized_end=447,
)

_CONSENSUSMESSAGEHEADER.fields_by_name['type'].enum_type = _CONSENSUSMESSAGEHEADER_TYPE
_CONSENSUSMESSAGEHEADER.fields_by_name['payload'].message_type = _CONSENSUSMESSAGEPAYLOAD
_CONSENSUSMESSAGEHEADER_TYPE.containing_type = _CONSENSUSMESSAGEHEADER
_CONSENSUSMESSAGE.fields_by_name['header'].message_type = _CONSENSUSMESSAGEHEADER
_CONSENSUSSEAL.fields_by_name['previous_cert_votes'].message_type = _CONSENSUSMESSAGE
DESCRIPTOR.message_types_by_name['ConsensusMessagePayload'] = _CONSENSUSMESSAGEPAYLOAD
DESCRIPTOR.message_types_by_name['ConsensusMessageHeader'] = _CONSENSUSMESSAGEHEADER
DESCRIPTOR.message_types_by_name['ConsensusMessage'] = _CONSENSUSMESSAGE
DESCRIPTOR.message_types_by_name['ConsensusSeal'] = _CONSENSUSSEAL
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

ConsensusMessagePayload = _reflection.GeneratedProtocolMessageType('ConsensusMessagePayload', (_message.Message,), dict(
  DESCRIPTOR = _CONSENSUSMESSAGEPAYLOAD,
  __module__ = 'consensus_messages_pb2'
  # @@protoc_insertion_point(class_scope:ConsensusMessagePayload)
  ))
_sym_db.RegisterMessage(ConsensusMessagePayload)

ConsensusMessageHeader = _reflection.GeneratedProtocolMessageType('ConsensusMessageHeader', (_message.Message,), dict(
  DESCRIPTOR = _CONSENSUSMESSAGEHEADER,
  __module__ = 'consensus_messages_pb2'
  # @@protoc_insertion_point(class_scope:ConsensusMessageHeader)
  ))
_sym_db.RegisterMessage(ConsensusMessageHeader)

ConsensusMessage = _reflection.GeneratedProtocolMessageType('ConsensusMessage', (_message.Message,), dict(
  DESCRIPTOR = _CONSENSUSMESSAGE,
  __module__ = 'consensus_messages_pb2'
  # @@protoc_insertion_point(class_scope:ConsensusMessage)
  ))
_sym_db.RegisterMessage(ConsensusMessage)

ConsensusSeal = _reflection.GeneratedProtocolMessageType('ConsensusSeal', (_message.Message,), dict(
  DESCRIPTOR = _CONSENSUSSEAL,
  __module__ = 'consensus_messages_pb2'
  # @@protoc_insertion_point(class_scope:ConsensusSeal)
  ))
_sym_db.RegisterMessage(ConsensusSeal)


# @@protoc_insertion_point(module_scope)
