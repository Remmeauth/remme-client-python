# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: consensus_messages.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='consensus_messages.proto',
  package='',
  syntax='proto3',
  serialized_pb=_b('\n\x18\x63onsensus_messages.proto\"P\n\x17\x43onsensusMessagePayload\x12\x0e\n\x06period\x18\x01 \x01(\x04\x12\x13\n\x0bproposal_id\x18\x02 \x01(\x0c\x12\x10\n\x08voter_id\x18\x03 \x01(\x0c\"\xac\x01\n\x10\x43onsensusMessage\x12$\n\x04type\x18\x01 \x01(\x0e\x32\x16.ConsensusMessage.Type\x12)\n\x07payload\x18\x02 \x01(\x0b\x32\x18.ConsensusMessagePayload\"G\n\x04Type\x12\x12\n\x0eVALUE_PROPOSAL\x10\x00\x12\r\n\tSOFT_VOTE\x10\x01\x12\r\n\tCERT_VOTE\x10\x02\x12\r\n\tNEXT_VOTE\x10\x03\"W\n\x16SignedConsensusMessage\x12\x19\n\x11message_signature\x18\x01 \x01(\x0c\x12\"\n\x07message\x18\x02 \x01(\x0b\x32\x11.ConsensusMessage\"E\n\rConsensusSeal\x12\x34\n\x13previous_cert_votes\x18\x01 \x03(\x0b\x32\x17.SignedConsensusMessage\"(\n\x14\x43onsensusSealRequest\x12\x10\n\x08\x62lock_id\x18\x01 \x01(\x0c\x62\x06proto3')
)



_CONSENSUSMESSAGE_TYPE = _descriptor.EnumDescriptor(
  name='Type',
  full_name='ConsensusMessage.Type',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='VALUE_PROPOSAL', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SOFT_VOTE', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CERT_VOTE', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NEXT_VOTE', index=3, number=3,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=212,
  serialized_end=283,
)
_sym_db.RegisterEnumDescriptor(_CONSENSUSMESSAGE_TYPE)


_CONSENSUSMESSAGEPAYLOAD = _descriptor.Descriptor(
  name='ConsensusMessagePayload',
  full_name='ConsensusMessagePayload',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='period', full_name='ConsensusMessagePayload.period', index=0,
      number=1, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='proposal_id', full_name='ConsensusMessagePayload.proposal_id', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='voter_id', full_name='ConsensusMessagePayload.voter_id', index=2,
      number=3, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=28,
  serialized_end=108,
)


_CONSENSUSMESSAGE = _descriptor.Descriptor(
  name='ConsensusMessage',
  full_name='ConsensusMessage',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='type', full_name='ConsensusMessage.type', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='payload', full_name='ConsensusMessage.payload', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _CONSENSUSMESSAGE_TYPE,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=111,
  serialized_end=283,
)


_SIGNEDCONSENSUSMESSAGE = _descriptor.Descriptor(
  name='SignedConsensusMessage',
  full_name='SignedConsensusMessage',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='message_signature', full_name='SignedConsensusMessage.message_signature', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='message', full_name='SignedConsensusMessage.message', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=285,
  serialized_end=372,
)


_CONSENSUSSEAL = _descriptor.Descriptor(
  name='ConsensusSeal',
  full_name='ConsensusSeal',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='previous_cert_votes', full_name='ConsensusSeal.previous_cert_votes', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=374,
  serialized_end=443,
)


_CONSENSUSSEALREQUEST = _descriptor.Descriptor(
  name='ConsensusSealRequest',
  full_name='ConsensusSealRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='block_id', full_name='ConsensusSealRequest.block_id', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=445,
  serialized_end=485,
)

_CONSENSUSMESSAGE.fields_by_name['type'].enum_type = _CONSENSUSMESSAGE_TYPE
_CONSENSUSMESSAGE.fields_by_name['payload'].message_type = _CONSENSUSMESSAGEPAYLOAD
_CONSENSUSMESSAGE_TYPE.containing_type = _CONSENSUSMESSAGE
_SIGNEDCONSENSUSMESSAGE.fields_by_name['message'].message_type = _CONSENSUSMESSAGE
_CONSENSUSSEAL.fields_by_name['previous_cert_votes'].message_type = _SIGNEDCONSENSUSMESSAGE
DESCRIPTOR.message_types_by_name['ConsensusMessagePayload'] = _CONSENSUSMESSAGEPAYLOAD
DESCRIPTOR.message_types_by_name['ConsensusMessage'] = _CONSENSUSMESSAGE
DESCRIPTOR.message_types_by_name['SignedConsensusMessage'] = _SIGNEDCONSENSUSMESSAGE
DESCRIPTOR.message_types_by_name['ConsensusSeal'] = _CONSENSUSSEAL
DESCRIPTOR.message_types_by_name['ConsensusSealRequest'] = _CONSENSUSSEALREQUEST
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

ConsensusMessagePayload = _reflection.GeneratedProtocolMessageType('ConsensusMessagePayload', (_message.Message,), dict(
  DESCRIPTOR = _CONSENSUSMESSAGEPAYLOAD,
  __module__ = 'consensus_messages_pb2'
  # @@protoc_insertion_point(class_scope:ConsensusMessagePayload)
  ))
_sym_db.RegisterMessage(ConsensusMessagePayload)

ConsensusMessage = _reflection.GeneratedProtocolMessageType('ConsensusMessage', (_message.Message,), dict(
  DESCRIPTOR = _CONSENSUSMESSAGE,
  __module__ = 'consensus_messages_pb2'
  # @@protoc_insertion_point(class_scope:ConsensusMessage)
  ))
_sym_db.RegisterMessage(ConsensusMessage)

SignedConsensusMessage = _reflection.GeneratedProtocolMessageType('SignedConsensusMessage', (_message.Message,), dict(
  DESCRIPTOR = _SIGNEDCONSENSUSMESSAGE,
  __module__ = 'consensus_messages_pb2'
  # @@protoc_insertion_point(class_scope:SignedConsensusMessage)
  ))
_sym_db.RegisterMessage(SignedConsensusMessage)

ConsensusSeal = _reflection.GeneratedProtocolMessageType('ConsensusSeal', (_message.Message,), dict(
  DESCRIPTOR = _CONSENSUSSEAL,
  __module__ = 'consensus_messages_pb2'
  # @@protoc_insertion_point(class_scope:ConsensusSeal)
  ))
_sym_db.RegisterMessage(ConsensusSeal)

ConsensusSealRequest = _reflection.GeneratedProtocolMessageType('ConsensusSealRequest', (_message.Message,), dict(
  DESCRIPTOR = _CONSENSUSSEALREQUEST,
  __module__ = 'consensus_messages_pb2'
  # @@protoc_insertion_point(class_scope:ConsensusSealRequest)
  ))
_sym_db.RegisterMessage(ConsensusSealRequest)


# @@protoc_insertion_point(module_scope)
